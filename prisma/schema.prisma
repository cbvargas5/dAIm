// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// to do:
// Create schema to include:
// - message/messages
// - DM
// - Game/storyline

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  clerkId      String      @unique
  email        String      @unique
  openaiApiKey String?     @unique
  characters   Character[]
  campaigns    Campaign[]
  messages      Message[]
}

model Character {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  createdByUserId String   @db.ObjectId
  createdByUser   User     @relation(fields: [createdByUserId], references: [id])
  campaignId      String   @db.ObjectId
  campaign        Campaign @relation(fields: [campaignId], references: [id])

  name      String
  backstory String?
}

model Campaign {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  createdByUserId String   @db.ObjectId
  createdByUser   User     @relation(fields: [createdByUserId], references: [id])

  characters Character[]
  title      String
  messages   Message[]
  gameover   Boolean     @default(false)
}

model Message {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  createdByUserId String   @db.ObjectId
  createdByUser   User     @relation(fields: [createdByUserId], references: [id])
  campaignId      String   @db.ObjectId
  campaign        Campaign @relation(fields: [campaignId], references: [id])
  isAI            Boolean  @default(false)
  content         String
}
